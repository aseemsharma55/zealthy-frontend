[{"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\index.tsx":"1","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\reportWebVitals.ts":"2","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\App.tsx":"3","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\customer.tsx":"4","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Users.tsx":"5","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Counter.tsx":"6","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Login.tsx":"7","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\AuthUser.tsx":"8","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\UserList.tsx":"9","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\services\\UserService.ts":"10","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\services\\UsersService.ts":"11","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Navbr.tsx":"12","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\AdminPanel.tsx":"13","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Ticket.tsx":"14"},{"size":684,"mtime":1696987339083,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1696634677330,"results":"17","hashOfConfig":"16"},{"size":610,"mtime":1696992699529,"results":"18","hashOfConfig":"16"},{"size":801,"mtime":1696717460161,"results":"19","hashOfConfig":"16"},{"size":1738,"mtime":1696979792140,"results":"20","hashOfConfig":"16"},{"size":1123,"mtime":1696721391640,"results":"21","hashOfConfig":"16"},{"size":1818,"mtime":1696724159778,"results":"22","hashOfConfig":"16"},{"size":1242,"mtime":1696971847005,"results":"23","hashOfConfig":"16"},{"size":994,"mtime":1696975425494,"results":"24","hashOfConfig":"16"},{"size":303,"mtime":1696973825454,"results":"25","hashOfConfig":"16"},{"size":263,"mtime":1696979727273,"results":"26","hashOfConfig":"16"},{"size":1331,"mtime":1696990728082,"results":"27","hashOfConfig":"16"},{"size":3706,"mtime":1697079816141,"results":"28","hashOfConfig":"16"},{"size":2768,"mtime":1697079732507,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b75urp",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\index.tsx",[],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\reportWebVitals.ts",[],[],["75"],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\App.tsx",[],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\customer.tsx",["76"],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Users.tsx",[],["77"],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Counter.tsx",["78"],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Login.tsx",[],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\AuthUser.tsx",[],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\UserList.tsx",["79"],[],"import React, { useState } from \"react\";\r\nimport { IUser } from \"../models/IUser\";\r\nimport { UserService } from \"../services/UserService\";\r\n\r\ninterface IState{\r\n    users:IUser[]\r\n}\r\n    \r\n\r\n\r\nconst UserList:React.FC = () => {\r\n    const [state,setState] = useState<IState>({\r\n        users:UserService.getAllUsers()\r\n    });\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"row w-50 m-4\">\r\n                <h1>Looping</h1>\r\n                <table className=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Sno</th>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Age</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {state.users.length > 0 && state.users.map(user => (\r\n        <tr key={user.sno}>\r\n            <td>{user.sno}</td>\r\n            <td>{user.name}</td>\r\n            <td>{user.age}</td>\r\n        </tr>\r\n    ))}\r\n  </tbody>\r\n</table>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default UserList","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\services\\UserService.ts",[],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\services\\UsersService.ts",[],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Navbr.tsx",[],[],"C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\AdminPanel.tsx",["80"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface UserTicket {\r\n  name: string;\r\n  email: string;\r\n  desc: string;\r\n  status: string;\r\n  reply?: string;\r\n};\r\n\r\nconst AdminPanel: React.FC = () => {\r\n  const [tickets, setTickets] = useState<UserTicket[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTickets = async () => {\r\n        try {\r\n            const response = await axios.get('http://127.0.0.1:8000/zealthy/fetch_users');\r\n            console.log(response.data.data);\r\n            setTickets(response.data.data);\r\n            setIsLoading(false);  // Set loading to false once data is fetched\r\n        } catch (err) {\r\n            console.error('Error fetching tickets:', err);\r\n            setIsLoading(false);  // Also set loading to false in case of error\r\n        }\r\n    };\r\n\r\n    fetchTickets();\r\n  }, []);\r\n\r\n  const updateTicketStatus = (index: number, status: string) => {\r\n    const updatedTickets = [...tickets];\r\n    updatedTickets[index].status = status;\r\n    setTickets(updatedTickets);\r\n  };\r\n\r\n  const handleReplyChange = (index: number, reply: string) => {\r\n    const updatedTickets = [...tickets];\r\n    updatedTickets[index].reply = reply;\r\n    setTickets(updatedTickets);\r\n  };\r\n\r\n  const handleSubmit = async (index:number,row: UserTicket) => {\r\n    try {\r\n      console.log(row)\r\n      const response = await axios.post('http://127.0.0.1:8000/zealthy/update', {'email':row.email,'status':row.status});\r\n      console.log(response)\r\n      \r\n      if (response.status === 200) {\r\n          // Handle success - maybe clear the form or show a success message\r\n          alert(\"Status Updated successfully!\")\r\n          console.log(\"Status Updated successfully!\", response.data);\r\n      } else {\r\n          // Handle any non-200 HTTP status codes as you see fit\r\n          console.error(\"Error submitting ticket:\", response.data);\r\n      }\r\n  } catch (error) {\r\n      // Handle errors, e.g., network error or invalid JSON response\r\n      console.error(\"API call failed:\", error);\r\n  }\r\n    // Logic to submit the reply and the updated status\r\n    console.log(`Would normally send email here with body: ${tickets[index].reply}`);\r\n    // Update your backend with the new status and the reply, if necessary\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2>Admin Panel</h2>\r\n      \r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Status</th>\r\n            <th scope=\"col\">Reply</th>\r\n            <th scope=\"col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tickets.map((ticket, index) => (\r\n            <tr key={index}>\r\n              <td>{ticket.name}</td>\r\n              <td>{ticket.email}</td>\r\n              <td>{ticket.desc}</td>\r\n              <td>\r\n                <select value={ticket.status} onChange={(e) => updateTicketStatus(index, e.target.value)}>\r\n                  <option value=\"new\">New</option>\r\n                  <option value=\"in progress\">In Progress</option>\r\n                  <option value=\"resolved\">Resolved</option>\r\n                </select>\r\n              </td>\r\n              <td>\r\n                <textarea onChange={(e) => handleReplyChange(index, e.target.value)} />\r\n              </td>\r\n              <td>\r\n                <button onClick={() => handleSubmit(index,ticket)}>Submit</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","C:\\Users\\Aseem\\react-typescript-zealthy\\src\\components\\Ticket.tsx",[],[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":15,"column":18,"nodeType":"85","messageId":"86","endLine":15,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":35,"column":6,"nodeType":"89","endLine":35,"endColumn":8,"suggestions":"90","suppressions":"91"},{"ruleId":"83","severity":1,"message":"92","line":7,"column":11,"nodeType":"85","messageId":"86","endLine":7,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":12,"column":18,"nodeType":"85","messageId":"86","endLine":12,"endColumn":26},{"ruleId":"83","severity":1,"message":"93","line":14,"column":10,"nodeType":"85","messageId":"86","endLine":14,"endColumn":19},"no-new-object",["94"],"@typescript-eslint/no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["95"],["96"],"'IPROPS' is defined but never used.","'isLoading' is assigned a value but never used.","no-object-constructor",{"desc":"97","fix":"98"},{"kind":"99","justification":"100"},"Update the dependencies array to be: [state]",{"range":"101","text":"102"},"directive","",[841,843],"[state]"]